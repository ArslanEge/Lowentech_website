{"ast":null,"code":"import Card from \"primevue/card\";\nimport InputText from \"primevue/inputtext\";\nimport Textarea from \"primevue/textarea\";\nimport Button from \"primevue/button\";\nimport Toast from \"primevue/toast\";\nexport default {\n  components: {\n    Card,\n    Toast,\n    InputTextField: InputText,\n    // alias\n    TextAreaField: Textarea,\n    // alias\n    ActionButton: Button // alias\n  },\n  data() {\n    return {\n      form: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        message: \"\"\n      }\n    };\n  },\n  methods: {\n    // async handleSubmit() {\n    //     if (!this.form.firstName || !this.form.lastName || !this.form.email || !this.form.message) {\n    //         this.$toast.add({\n    //             severity: \"error\",\n    //             summary: \"Missing Fields\",\n    //             detail: \"Please fill all fields.\",\n    //             life: 3000,\n    //         });\n    //         return;\n    //     }\n\n    //     this.sending = true;\n    //     try {\n    //         await emailjs.send(\n    //             import.meta.env.VITE_EMAILJS_SERVICE_ID,\n    //             import.meta.env.VITE_EMAILJS_TEMPLATE_ID,\n    //             {\n    //                 title: \"Website Contact Form\",\n    //                 name: `${this.form.firstName} ${this.form.lastName}`,\n    //                 email: this.form.email,\n    //                 message: this.form.message,\n    //                 time: new Date().toLocaleString(), // optional: since you show {{time}}\n    //             },\n    //             import.meta.env.VITE_EMAILJS_PUBLIC_KEY\n    //         );\n\n    //         this.$toast.add({\n    //             severity: \"success\",\n    //             summary: \"Message Sent\",\n    //             detail: \"Thanks! We’ll get back to you soon.\",\n    //             life: 3000,\n    //         });\n\n    //         this.form = { firstName: \"\", lastName: \"\", email: \"\", message: \"\" };\n    //     } catch (err) {\n    //         this.$toast.add({\n    //             severity: \"error\",\n    //             summary: \"Send Failed\",\n    //             detail: err?.text || \"Could not send your message. Try again later.\",\n    //             life: 4000,\n    //         });\n    //     } finally {\n    //         this.sending = false;\n    //     }\n    // }\n  }\n};","map":{"version":3,"names":["Card","InputText","Textarea","Button","Toast","components","InputTextField","TextAreaField","ActionButton","data","form","firstName","lastName","email","message","methods"],"sources":["/Users/egearslan/Desktop/löwentech/löwentech_website/my-vue-ts-app/src/components/ContactPage/ContactUs.vue"],"sourcesContent":["<template>\n    <div class=\"bg-header-gray px-4 sm:px-8 lg:px-32 py-12\">\n        <Toast /> <!-- Toast container -->\n\n        <Card class=\"w-full bg-gradient-to-b from-[#e0e0e0] to-[#FFFFFF] p-6 sm:p-10 rounded-lg\">\n            <template #content>\n                <!-- Title Section -->\n                <h1 class=\"text-3xl sm:text-4xl lg:text-5xl font-medium text-black text-center mb-16\">\n                    Contact Us\n                </h1>\n\n                <!-- Form -->\n                <form  class=\"max-w-3xl mx-auto\">\n                    <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\n                        <!-- First Name -->\n                        <div>\n                            <label class=\"block text-base font-medium text-black mb-2\">\n                                First Name\n                            </label>\n                            <InputTextField v-model=\"form.firstName\" class=\"w-full p-2 text-black\"\n                                placeholder=\"First Name\" />\n                        </div>\n\n                        <!-- Last Name -->\n                        <div>\n                            <label class=\"block text-base font-medium text-black mb-2\">\n                                Last Name\n                            </label>\n                            <InputTextField v-model=\"form.lastName\" class=\"w-full p-2 text-black\"\n                                placeholder=\"Last Name\" />\n                        </div>\n\n                        <!-- Email -->\n                        <div class=\"sm:col-span-2\">\n                            <label class=\"block text-base font-medium text-black mb-2\">\n                                Email\n                            </label>\n                            <InputTextField v-model=\"form.email\" type=\"email\" class=\"w-full p-2 text-black\"\n                                placeholder=\"Email address\" />\n                        </div>\n\n                        <!-- Message -->\n                        <div class=\"sm:col-span-2\">\n                            <label class=\"block text-base font-medium text-black mb-2\">\n                                Message\n                            </label>\n                            <TextAreaField v-model=\"form.message\" rows=\"6\" class=\"w-full p-2 text-black\"\n                                placeholder=\"Leave us a message...\" auto-resize />\n                        </div>\n                    </div>\n\n                    <!-- Button -->\n                    <div class=\"mt-10 flex justify-center\">\n                        <ActionButton type=\"submit\" label=\"Send Message\"\n                            class=\"px-6 py-3 rounded-xl w-full bg-black text-softer-gray\" />\n                    </div>\n                </form>\n            </template>\n        </Card>\n    </div>\n</template>\n\n<script>\nimport Card from \"primevue/card\";\nimport InputText from \"primevue/inputtext\";\nimport Textarea from \"primevue/textarea\";\nimport Button from \"primevue/button\";\nimport Toast from \"primevue/toast\";\n\nexport default {\n    components: {\n        Card,\n        Toast,\n        InputTextField: InputText, // alias\n        TextAreaField: Textarea, // alias\n        ActionButton: Button, // alias\n    },\n    data() {\n        return {\n            form: {\n                firstName: \"\",\n                lastName: \"\",\n                email: \"\",\n                message: \"\",\n            },\n        };\n    },\n    methods: {\n        // async handleSubmit() {\n        //     if (!this.form.firstName || !this.form.lastName || !this.form.email || !this.form.message) {\n        //         this.$toast.add({\n        //             severity: \"error\",\n        //             summary: \"Missing Fields\",\n        //             detail: \"Please fill all fields.\",\n        //             life: 3000,\n        //         });\n        //         return;\n        //     }\n\n        //     this.sending = true;\n        //     try {\n        //         await emailjs.send(\n        //             import.meta.env.VITE_EMAILJS_SERVICE_ID,\n        //             import.meta.env.VITE_EMAILJS_TEMPLATE_ID,\n        //             {\n        //                 title: \"Website Contact Form\",\n        //                 name: `${this.form.firstName} ${this.form.lastName}`,\n        //                 email: this.form.email,\n        //                 message: this.form.message,\n        //                 time: new Date().toLocaleString(), // optional: since you show {{time}}\n        //             },\n        //             import.meta.env.VITE_EMAILJS_PUBLIC_KEY\n        //         );\n\n        //         this.$toast.add({\n        //             severity: \"success\",\n        //             summary: \"Message Sent\",\n        //             detail: \"Thanks! We’ll get back to you soon.\",\n        //             life: 3000,\n        //         });\n\n        //         this.form = { firstName: \"\", lastName: \"\", email: \"\", message: \"\" };\n        //     } catch (err) {\n        //         this.$toast.add({\n        //             severity: \"error\",\n        //             summary: \"Send Failed\",\n        //             detail: err?.text || \"Could not send your message. Try again later.\",\n        //             life: 4000,\n        //         });\n        //     } finally {\n        //         this.sending = false;\n        //     }\n        // }\n    }\n};\n</script>"],"mappings":"AA+DA,OAAOA,IAAG,MAAO,eAAe;AAChC,OAAOC,SAAQ,MAAO,oBAAoB;AAC1C,OAAOC,QAAO,MAAO,mBAAmB;AACxC,OAAOC,MAAK,MAAO,iBAAiB;AACpC,OAAOC,KAAI,MAAO,gBAAgB;AAElC,eAAe;EACXC,UAAU,EAAE;IACRL,IAAI;IACJI,KAAK;IACLE,cAAc,EAAEL,SAAS;IAAE;IAC3BM,aAAa,EAAEL,QAAQ;IAAE;IACzBM,YAAY,EAAEL,MAAM,CAAE;EAC1B,CAAC;EACDM,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACb;IACJ,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAER,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}